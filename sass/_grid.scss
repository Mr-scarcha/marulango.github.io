// _grid.scss

/*-----------------------------------------------------
960 Grid System ~ Core CSS.
Learn more ~ http://960.gs/
Licensed under GPL and MIT.
-------------------------------------------------------*/
 
/* Grid Settings
---------------------------*/
// 12-column grid
// $columns: 12; // Number of columns
// $col_width: 60px; // Column width
// $gutter: 20px; // Gutter width
 
// 16-column grid
//$columns: 16;
//$col_width: 40px;
//$gutter: 20px;
 
// 24-column grid
$columns: 24;
$col_width: 3.125%;
$gutter: 1.04166667%;
$cell_width: $col_width + $gutter;
$gutter-side: $gutter / 2;
 
body {
  min-width: 960px;
}
 
/* `Containers
----------------------------------------------------------------------------------------------------*/
@mixin container {
  margin-left: auto;
  margin-right: auto;
  max-width: 960px;
}

@mixin row {
  margin-left: 0;
  margin-right: 0;
  width: 100%;
  display: block;
  &:before, &:after {
    content: "";
    clear: both;
    display: table;
  }
}
 
/* `Grid >> Children (Alpha ~ First, Omega ~ Last)
----------------------------------------------------------------------------------------------------*/
@mixin alpha {
  margin-left: 0 !important;
}
 
@mixin omega {
  margin-right: 0 !important;
}

.alpha {
  @include alpha;
}

.omega {
  @include omega;
}

@mixin rtl {
  float: right !important;
}

.rtl {
  @include rtl;
}

/* `Grid >> Columns
----------------------------------------------------------------------------------------------------*/
@mixin grid($i) {
  display: inline;
  float: left;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
  width: $col_width * $i + ($gutter * ($i - 1));
}

@mixin gutter-left($i){
  display: inline;
  float: left;
  margin-left: 0;
  margin-right: $gutter / 2;
  width: $col_width * $i + $gutter * ($i - 1) + $gutter-side;
}

@mixin gutter-right($i){
  display: inline;
  float: left;
  margin-right: 0;
  margin-left: $gutter / 2;
  width: $col_width * $i + $gutter * ($i - 1) + $gutter-side;
}

@mixin gutter-full($i){
  display: inline;
  float: left;
  margin-right: 0;
  margin-left: 0;
  width: $col_width * $i + $gutter * ($i - 1) + $gutter;
}


/* `Prefix Extra Space
----------------------------------------------------------------------------------------------------*/
@mixin prefix($i) {
  padding-left: $cell_width * $i
}
 
/* `Suffix Extra Space
----------------------------------------------------------------------------------------------------*/
@mixin suffix($i) {
  padding-right: $cell_width * $i;
}
 
/* `Push Space
----------------------------------------------------------------------------------------------------*/
@mixin push($i) {
  position: relative;
  left: ($i * $col_width) + (($i - 1)  * $gutter);
}

/* `Pull Space >> 12 Columns
----------------------------------------------------------------------------------------------------*/
@mixin pull($i) {
  position: relative;
  left: 0 - ($cell_width * $i);
}

/* `Containers
----------------------------------------------------------------------------------------------------*/
.container {
  @include container;
  margin: 0 auto;
  :before, :after {
    content: "";
    clear: both;
    display: table;
  }
}

.row {
  @include row; 
  & + .row {
    margin-top: 20px;
  }
}

/* `Break Columns
----------------------------------------------------------------------------------------------------*/
@mixin clear {
  clear: both;
}

.clear {
  @include clear;
}

@import 'columns';